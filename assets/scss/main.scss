// required to get Bootstrap functions and variables
@import "bootstrap/functions";

// --- PKIC Variable Overrides & Custom Colors ---

// Default Bootstrap colors
$green: rgb(25, 135, 84);
$orange: rgb(237, 125, 49);
$blue: rgb(90, 155, 213);
$yellow: rgb(255, 192, 0);
$red: rgb(220, 53, 69);
$purple: rgb(111, 66, 193);

// Extended Palette - Light & Dark Variants
$green-light: rgb(40, 167, 69);
$green-dark: rgb(20, 108, 67);
$green-pale: rgb(212, 237, 218);
$green-deep: rgb(15, 81, 50);

$orange-light: rgb(253, 159, 83);
$orange-dark: rgb(189, 100, 39);
$orange-pale: rgb(255, 230, 204);
$orange-deep: rgb(150, 75, 29);

$blue-light: rgb(129, 181, 224);
$blue-dark: rgb(72, 124, 170);
$blue-pale: rgb(214, 234, 248);
$blue-deep: rgb(54, 93, 128);

$yellow-light: rgb(255, 220, 77);
$yellow-dark: rgb(204, 153, 0);
$yellow-pale: rgb(255, 248, 204);
$yellow-deep: rgb(153, 115, 0);

$red-light: rgb(248, 115, 131);
$red-dark: rgb(176, 42, 55);
$red-pale: rgb(248, 215, 218);
$red-deep: rgb(132, 32, 41);

$purple-light: rgb(147, 112, 219);
$purple-dark: rgb(89, 53, 154);
$purple-pale: rgb(230, 221, 243);
$purple-deep: rgb(67, 40, 116);

// Additional Complementary Colors
$teal: rgb(32, 201, 151);
$coral: rgb(255, 127, 80);
$indigo: rgb(102, 126, 234);
$amber: rgb(255, 193, 7);
$rose: rgb(233, 30, 99);
$violet: rgb(156, 39, 176);

// Neutral Supporting Colors
$gray-100: rgb(248, 249, 250);
$gray-200: rgb(233, 236, 239);
$gray-300: rgb(206, 212, 218);
$gray-400: rgb(173, 181, 189);
$gray-500: rgb(108, 117, 125);
$gray-600: rgb(73, 80, 87);
$gray-700: rgb(52, 58, 64);
$gray-800: rgb(33, 37, 41);
$gray-900: rgb(13, 27, 42);

// Map of all colors for easy use
$pkic-colors-map: (
  "green": $green,
  "orange": $orange,
  "blue": $blue,
  "yellow": $yellow,
  "red": $red,
  "purple": $purple,
  "green-light": $green-light,
  "green-dark": $green-dark,
  "green-pale": $green-pale,
  "green-deep": $green-deep,
  "orange-light": $orange-light,
  "orange-dark": $orange-dark,
  "orange-pale": $orange-pale,
  "orange-deep": $orange-deep,
  "blue-light": $blue-light,
  "blue-dark": $blue-dark,
  "blue-pale": $blue-pale,
  "blue-deep": $blue-deep,
  "yellow-light": $yellow-light,
  "yellow-dark": $yellow-dark,
  "yellow-pale": $yellow-pale,
  "yellow-deep": $yellow-deep,
  "red-light": $red-light,
  "red-dark": $red-dark,
  "red-pale": $red-pale,
  "red-deep": $red-deep,
  "purple-light": $purple-light,
  "purple-dark": $purple-dark,
  "purple-pale": $purple-pale,
  "purple-deep": $purple-deep,
  "teal": $teal,
  "coral": $coral,
  "indigo": $indigo,
  "amber": $amber,
  "rose": $rose,
  "violet": $violet,
  "gray-100": $gray-100,
  "gray-200": $gray-200,
  "gray-300": $gray-300,
  "gray-400": $gray-400,
  "gray-500": $gray-500,
  "gray-600": $gray-600,
  "gray-700": $gray-700,
  "gray-800": $gray-800,
  "gray-900": $gray-900,
);

// Map Bootstrap's theme colors to your custom colors
$primary: $green;
$secondary: $gray-600;
$success: $green;
$info: $blue;
$warning: $yellow;
$danger: $red;
$light: $gray-100;
$dark: $gray-800;

// Override Bootstrap link colors
$link-color: $primary;
$link-hover-color: $primary;

// Enable negative margins utility classes
$enable-negative-margins: true;

// Import Bootstrap after all custom variables and overrides
@import "bootstrap/variables";
@import "bootstrap/bootstrap";

// CSS Custom Properties for easy use
:root {
  // Use Sass variables to define CSS custom properties
  @each $name, $value in $pkic-colors-map {
    --#{$name}: #{$value};
  }
}

// --- Custom PKIC Colors for up to 16 Locations ---
// This map holds all base colors (single colors and former gradient base colors)
// All locations will now be treated as having a single base color for styling purposes.
$all-pkic-locations-colors: (
  "location-0": $green,
  "location-1": $blue,
  "location-2": $orange,
  "location-3": $red,
  "location-4": $purple,
  "location-5": $teal,
  "location-6": $indigo,
  "location-7": $coral,
  "location-8": $amber,
  "location-9": $violet,
  "location-10": $green-light,
  "location-11": $blue-light,
  "location-12": $orange-light,
  "location-13": $red-light,
  "location-14": $purple-light,
  "location-15": $rose,
);

// Function to get the base color for any location
@function pkic-color($key) {
  @if map-has-key($all-pkic-locations-colors, $key) {
    @return map-get($all-pkic-locations-colors, $key);
  } @else {
    @return null;
  }
}

// --- General Styles ---

// import font(s)
@import url(https://fonts.googleapis.com/css?family=Roboto:400,300,700);

h1,
h2,
h3,
h4,
h5,
h6 {
  scroll-margin-top: 60px;
}
div {
  scroll-margin-top: 150px;
}

html,
body {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
  font-family: 'Roboto', sans-serif !important;
}

table {
  @extend .table;
  @extend .table-bordered;
  @extend .table-striped;
  @extend .table-hover;

  text-align: left;
  width: 100%;
  margin-top: 1.6em;
}

thead {
  @extend .table-dark;
}

main {
  flex: 1;
}

#sidebar {
  color: rgba(107, 107, 107, 0.849);
}

#sidebar a {
  color: currentColor;
}

#participate {
  color: #fff;
  text-align: center;
  font-size: 1.6em;
  font-weight: 200 !important;
}

#participate a {
  color: currentColor;
}

.member-logo {
  margin: 20px;
  margin-right: 30px;
  margin-left: 30px;
  height: 40px;
  max-width: 175px;
  filter: grayscale(1) opacity(0.6) contrast(0.5);
}

.members a,
a:hover,
.member-logo:hover {
  filter: none;
  text-decoration: none;
}

.linkArea {
  color: currentColor;
  text-decoration: none;
}

.bd-placeholder-img {
  font-size: 1.125rem;
  text-anchor: middle;
  -webkit-user-select: none;
  -moz-user-select: none;
  user-select: none;
}

figure,
#content > p > img {
  margin: 2rem;
  text-align: center;
}

figure > img,
#content > p > img {
  max-width: 80%;
}

figcaption,
figcaption h4 {
  font-size: 70%;
  text-align: center !important;
}

blockquote {
  font-size: 1.3em;
  margin-left: -1.2em;
  font-weight: 400 !important;
  font-style: italic;
  color: #555555;
  padding: 1.2em 30px 1.2em 75px;
  border-left: 8px solid rgb(33, 37, 41);
  line-height: 1.6;
  position: relative;
  background: #efefef;
}

blockquote::before {
  font-family: Arial;
  content: "\201C";
  color: rgb(33, 37, 41);
  font-size: 4em;
  position: absolute;
  left: 10px;
  top: -10px;
}

blockquote::after {
  content: '';
}

blockquote h4 {
  display: block;
  color: #333333;
  font-style: normal;
  font-weight: bold;
  margin-top: 1em;
}

.callout-warning {
  font-size: 1em;
  color: rgb(200, 0, 0);
  margin-left: 0em;
  border-left: 8px solid rgb(200, 0, 0);
  background: rgba(200, 0, 0, 0.2);
}

.callout-warning::before {
  margin-left: 10px;
  line-height: 1em;
  content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='rgb(200, 0, 0)' class='bi bi-exclamation-triangle' viewBox='0 0 16 16'%3E%3Cpath d='M7.938 2.016A.13.13 0 0 1 8.002 2a.13.13 0 0 1 .063.016.146.146 0 0 1 .054.057l6.857 11.667c.036.06.035.124.002.183a.163.163 0 0 1-.054.06.116.116 0 0 1-.066.017H1.146a.115.115 0 0 1-.066-.017.163.163 0 0 1-.054-.06.176.176 0 0 1 .002-.183L7.884 2.073a.147.147 0 0 1 .054-.057zm1.044-.45a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566z'/%3E%3Cpath d='M7.002 12a1 1 0 1 1 2 0 1 1 0 0 1-2 0zM7.1 5.995a.905.905 0 1 1 1.8 0l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995z'/%3E%3C/svg%3E");
}

.callout-info {
  font-size: 1em;
  color: rgb(160, 140, 0);
  margin-left: 0em;
  border-left: 8px solid rgb(255, 225, 0);
  background: rgba(255, 225, 0, 0.2);
}

.callout-info::before {
  margin-left: 10px;
  line-height: 1em;
  content: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='32' height='32' fill='rgb(160, 140, 0)' class='bi bi-info-circle' viewBox='0 0 16 16'%3E%3Cpath d='M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z'/%3E%3Cpath d='m8.93 6.588-2.29.287-.082.38.45.083c.294.07.352.176.288.469l-.738 3.468c-.194.897.105 1.319.808 1.319.545 0 1.178-.252 1.465-.598l.088-.416c-.2.176-.492.246-.686.246-.275 0-.375-.193-.304-.533L8.93 6.588zM9 4.5a1 1 0 1 1-2 0 1 1 0 0 1 2 0z'/%3E%3C/svg%3E");
}

.highlight > pre {
  padding: 1.5rem;
}

main h2 {
  text-align: left;
  font-size: 1.6em;
  padding-top: 1em;
  font-weight: 500 !important;
}

main h3 {
  text-align: left;
  font-size: 1.2em;
  padding-top: 1em;
  font-weight: 500 !important;
}

main h4 {
  text-align: left;
  font-size: 1.1em;
  padding-top: 1em;
  font-weight: 500 !important;
}

.banner {
  animation: scroller 60s linear 0.01s infinite;
}

@include media-breakpoint-up(xs) {
  .agenda-time {
    width: 90px;
    min-width: 90px;
    max-width: 90px;
  }

  .agenda-content {
    width: auto;
    min-width: 260px;
    flex: 1;
  }
}

@include media-breakpoint-up(lg) {
  .agenda-time {
    width: 100px;
    min-width: 100px;
    max-width: 100px;
  }

  .agenda-content {
    width: auto;
    min-width: 280px;
    flex: 1;
  }
}

#agenda-tabs .nav-link {
  background: var(--bs-success-bg-subtle);
}
#agenda-tabs .active {
  background: var(--bs-light);
  font-weight: bold;
}

@keyframes scroller {
  0% {
    opacity: 0;
    transform: translate(0, 0);
  }

  5% {
    opacity: 1;
    transform: translate(0, 0);
  }

  95% {
    opacity: 1;
    transform: translate(-225%, 0);
  }

  100% {
    opacity: 0;
  }
}

@media (min-width: 768px) {
  .bd-placeholder-img-lg {
    font-size: 3.5rem;
  }
}

self-assessment {
  --pkimm-sticky-top-offset: 56px;
}

@import "agenda";
@import "sponsors";
@import "session-registration";
