// Agenda fullscreen functionality
.agenda-fullscreen {
  position: fixed !important;
  top: 0 !important;
  left: 0 !important;
  width: 100vw !important;
  height: 100vh !important;
  background: white !important;
  z-index: 1055 !important;
  overflow: auto !important;
  padding: 1rem !important;
  box-sizing: border-box !important;
  display: flex !important;
  flex-direction: column !important;

  // Fix the header layout in fullscreen
  .position-relative {
    position: relative !important;
    margin-bottom: 1rem !important;
    flex-shrink: 0 !important;
  }

  // Make the container fill the remaining space
  .agenda-grid-container {
    flex: 1 1 auto !important;
    width: 100% !important;
    height: auto !important;
    padding: 0 !important;
    margin: 0 !important;
    max-width: none !important;
    left: 0 !important;
    display: flex !important;
    flex-direction: column !important;
    box-sizing: border-box !important;
    overflow-x: auto !important;
    overflow-y: visible !important;
  }

  .agenda-grid {
     width: 100% !important;
     height: auto !important;
     margin: 0 !important;
     max-width: none !important;
     left: 0 !important;
     box-sizing: border-box !important;
     &[data-locations] {
        grid-template-columns: 100px repeat(var(--location-count, 10), minmax(320px, 1fr)) !important;
        min-width: calc(100px + var(--location-count, 10) * 320px + 2rem) !important;
        max-width: none !important;
     }
  }

  // Override fixed widths for the grid items in fullscreen
  .agenda-time, .agenda-content {
    width: auto !important;
    min-width: 320px !important;
    max-width: none !important;
  }

  .agenda-time {
     max-width: 100px !important;
     min-width: 100px !important;
  }

  .agenda-session {
    min-height: unset !important;
  }

  // Fix break positioning in fullscreen
  .agenda-break {
    position: relative !important;
    
    &::before {
      width: 100vw !important;
      left: 50% !important;
      transform: translateX(-50%) !important;
    }
  }

  // Fullscreen button positioning - adjust for new layout
  .agenda-controls {
    z-index: 1100 !important;
  }

  #fullscreen-btn, #expand-all-btn {
    position: static !important; // Let flexbox handle positioning
    z-index: 1100 !important;
    width: auto !important;
    min-width: unset !important;
    max-width: none !important;
    padding: 0.5rem 0.75rem !important;
    border-radius: 0.375rem !important; // Match Bootstrap .btn border-radius
    box-shadow: 0 2px 8px rgba(0,0,0,0.08) !important;
  }
}

// Agenda Grid System
.agenda-grid-container {
  width: 100%;
  overflow-x: auto;
  overflow-y: visible;
  -webkit-overflow-scrolling: touch;
  position: relative;
}

.agenda-grid {
  display: grid;
  gap: 0.5rem;
  overflow-x: visible;
  width: fit-content;
  min-width: 100%;
  
  // Default grid template for larger screens
  @for $i from 1 through 10 {
    &[data-locations="#{$i}"] {
        grid-template-columns: 100px repeat($i, minmax(320px, 1fr));
        min-width: calc(100px + #{$i} * 320px + 2rem);
    }
  }
}

// Overflow navigation arrows - positioned relative to the desktop-agenda wrapper
.desktop-agenda {
  position: relative;
}

.scroll-arrow {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: rgba(255, 255, 255, 0.95);
  border: 2px solid #dee2e6;
  border-radius: 50%;
  width: 44px;
  height: 44px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  z-index: 15;
  transition: all 0.3s ease;
  box-shadow: 0 4px 12px rgba(0,0,0,0.15);

  &:hover {
    background: white;
    border-color: var(--bs-primary);
    color: var(--bs-primary);
    box-shadow: 0 6px 16px rgba(0,0,0,0.2);
    transform: translateY(-50%) scale(1.05);
  }

  &.disabled {
    opacity: 0.4;
    cursor: not-allowed;
    pointer-events: none;
  }

  &.scroll-left {
    left: 105px; // Position just after the time column
  }

  &.scroll-right {
    right: 15px;
  }

  svg {
    width: 18px;
    height: 18px;
  }
}

// Overflow fade indicators - use absolute positioning within the container wrapper
.desktop-agenda::before,
.desktop-agenda::after {
  content: '';
  position: absolute;
  top: 0;
  bottom: 0;
  width: 30px;
  pointer-events: none;
  z-index: 5;
  transition: opacity 0.3s ease;
  opacity: 0;
}

.desktop-agenda::before {
  left: 100px; // After time column
  background: linear-gradient(to right, rgba(255,255,255,0.8), transparent);
}

.desktop-agenda::after {
  right: 0;
  background: linear-gradient(to left, rgba(255,255,255,0.8), transparent);
}

.desktop-agenda.show-left-fade::before {
  opacity: 1;
}

.desktop-agenda.show-right-fade::after {
  opacity: 1;
}

// Ensure buttons stay above gradients
.desktop-agenda {
  position: relative;
  
  .float-end {
    position: relative;
    z-index: 20; // Higher than gradients and arrows
  }
}

// Time styling
.agenda-time {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 0.5rem 0.25rem;
  position: sticky;
  left: 0;
  top: 0; // Also stick to top during vertical scroll
  background: white;
  z-index: 11; // Higher than break to be in front when overlapping
  border-right: 1px solid #dee2e6;
  box-shadow: 2px 0 4px rgba(0,0,0,0.05);
}

.time-main {
  font-size: 1.3rem;
  font-weight: 700;
  color: #212529;
  margin-bottom: 0.25rem;
}

.time-local {
  font-size: 0.7rem;
  color: #6c757d;
  text-align: center;
}

// Session and break styling
.agenda-session {
  &.hidden {
    display: none;
  }
}

.session-card,
.mobile-session-card {
  border: 2px solid var(--location-border, #dee2e6); // Default border
  border-radius: 8px;
  background: white; // Explicitly set white background to override any default
  cursor: pointer;
  transition: all 0.2s ease;
  overflow: hidden;

  &:hover {
    transform: translateY(-1px);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
    border-color: var(--location-color, #{$primary}); // Hover border color
  }
}

.session-card {
  background-color: #fff;
  height: 100%;
  display: flex;
  flex-direction: column;
  min-width: 260px;
  max-width: 100%;

  &:hover {
    transform: translateY(-2px);
  }
}

.mobile-session-card {
  margin-bottom: 1rem;
}

.session-content,
 .mobile-session-content {
   padding: 1rem;
}

.session-content {
  max-height: 350px;
  overflow: hidden;
  position: relative;
  transition: max-height 0.3s;
}

.session-content.expanded {
  max-height: none;
  overflow: visible;
}

.session-content::after {
  content: '';
  position: absolute;
  left: 0;
  right: 0;
  bottom: 0;
  height: 2.5em;
  background: linear-gradient(to bottom, rgba(255,255,255,0) 0%, rgba(255,255,255,0.9) 80%);
  pointer-events: none;
  display: block;
}

.session-content.expanded::after {
  display: none;
}

.session-content {
  height: 100%;
}

.session-title {
  font-size: 1.1rem;
  font-weight: 700;
  line-height: 1.3;
  margin-bottom: 0.75rem;
  color: var(--location-text-color, #212529);
  flex-shrink: 0;
}

.session-speakers,
.mobile-speakers {
  margin-bottom: 0.75rem;
  flex-shrink: 0;
}

.mobile-speakers {
  margin: 0.75rem 0;
}

.speaker-info,
.mobile-speaker {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  margin-bottom: 0.5rem;

  &:last-child {
    margin-bottom: 0;
  }
}

.speaker-avatar,
.mobile-speaker-avatar {
  border-radius: 50%;
  flex-shrink: 0;
}

.speaker-avatar {
  width: 32px;
  height: 32px;
}

.mobile-speaker-avatar {
  width: 28px;
  height: 28px;
}

.speaker-initial {
  background: var(--location-color, #{$primary});
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 0.8rem;
  font-weight: 600;
}

.speaker-details,
.mobile-speaker-info {
  flex-grow: 1;
  min-width: 0;
}

.mobile-speaker-info {
  flex-direction: column;
}

.speaker-name {
  font-weight: 600;
  font-size: 0.85rem;
  color: var(--location-color, #{$primary});
}

.speaker-role {
  font-size: 0.75rem;
  color: var(--location-text-color-secondary, #6c757d);
}

.session-preview-wrapper {
  flex-grow: 1;
}

.session-preview-gradient,
.mobile-session-preview {
  font-size: 0.8rem;
  color: var(--location-text-color-secondary, #6c757d);
  margin: 0;
  overflow: hidden;
}

.mobile-session-preview {
  font-size: 0.85rem;
  line-height: 1.4;
  margin-top: 0.75rem;
}

// Ensure buttons stay above gradients
.desktop-agenda {
  position: relative;
  
  .agenda-controls {
    z-index: 20; // Higher than gradients and arrows
  }
}

// Break row styling (simple visible card)
.agenda-break {
  grid-column: 2 / -1;
  position: relative;
  display: flex;
  align-items: center;
  justify-content: flex-start; // keep card origin aligned left
  padding: .5rem 0 .75rem .5rem;
  pointer-events: none; // prevents the large grid cell from intercepting events
}

.agenda-break .break-card {
  background: linear-gradient(135deg, #6c757d 0%, #495057 100%);
  color: #fff;
  padding: .9rem 1.4rem; // slightly higher / taller
  border-radius: 10px;
  font-weight: 600;
  font-size: 1rem; // a touch larger for visibility
  line-height: 1.2;
  box-shadow: 0 4px 10px rgba(0,0,0,.15);
  white-space: nowrap;
  width: var(--agenda-break-width, auto);
  max-width: var(--agenda-break-width, 100%);
  pointer-events: auto; // clickable if needed later
  position: sticky;
  left: calc(var(--agenda-time-width, 100px));
  /* Ensure it sits above sessions horizontally */
  z-index: 12;
  text-align: center;
  display: flex;
  justify-content: center;
  align-items: center;
}

// When only one location is selected the grid-column becomes '2'; ensure width still works
.agenda-grid[data-locations="1"] .agenda-break { grid-column: 2; }

// ensure mobile break retains spacing if used elsewhere
.mobile-break { margin-bottom: 1rem; }

// All Location-specific styles (now unified as single colors)
@each $location, $color in $all-pkic-locations-colors {
  .#{$location},
  .#{$location}-session {
    --location-color: #{$color};
    --location-color-rgb: #{red($color)}, #{green($color)}, #{blue($color)};
    --location-bg: white; // Explicitly set background to white for sessions
    --location-border: #{rgba($color, 0.3)}; // Border uses the base color with opacity
    --location-text-color: #212529;
    --location-text-color-secondary: #6c757d;
  }

  // Card header background colors for session registration
  .card .card-header.#{$location}-session {
    background-color: #{$color};
    color: white;
  }

  // Accent colors for session registration card bodies
  .card.#{$location}-session .border-primary {
    border-color: #{$color} !important;
  }

  .card.#{$location}-session .text-primary {
    color: #{$color} !important;
  }

  .card.#{$location}-session .bg-primary-subtle {
    background-color: #{rgba($color, 0.1)} !important;
  }

  .card.#{$location}-session .bg-success-subtle {
    background-color: #{rgba($color, 0.1)} !important;
  }

  .card.#{$location}-session .border-success {
    border-color: #{$color} !important;
  }

  // Save button colors for session registration
  .btn.location-0-session-btn {
    background-color: #{map-get($all-pkic-locations-colors, 'location-0')} !important;
    border-color: #{map-get($all-pkic-locations-colors, 'location-0')} !important;
  }

  .btn.location-0-session-btn:hover {
    background-color: #{darken(map-get($all-pkic-locations-colors, 'location-0'), 10%)} !important;
    border-color: #{darken(map-get($all-pkic-locations-colors, 'location-0'), 10%)} !important;
  }

  // Modal header still gets a slight gradient for visual interest, using the base color
  .#{$location}-modal .modal-header {
    background: linear-gradient(135deg, #{$color} 0%, #{darken($color, 15%)} 100%);
    color: white;
    border-bottom: none;
    padding: 1.5rem;
  }

  // Filter button styles
  .location-filter-btn.#{$location} {
    background: #{rgba($color, 0.1)}; // Light background for button
    color: #{$color}; // Text color is the base color
    border: 2px solid #{rgba($color, 0.3)}; // Border is a lighter shade of the base color
  }

  .location-filter-btn.#{$location}:hover,
  .location-filter-btn.#{$location}.active {
    background: #{$color}; // Solid color background on hover/active
    color: white; // White text on hover/active
  }

  .location-filter-btn.#{$location}.active::after {
    background: white;
    color: #{$color};
    border-color: #{$color};
  }
}

// Mobile layout
.mobile-agenda {
  padding: 0.5rem 0;
}

.mobile-time-row {
  margin-bottom: 1rem;
}

.mobile-time {
  text-align: left;
  padding: 0.5rem 0;
  border-bottom: 2px solid #e9ecef;
}

.mobile-location-badge {
  background: var(--location-color, #{$primary});
  color: white;
  padding: 0.5rem 1rem;
  font-size: 0.8rem;
  font-weight: 600;
}

// Location filter buttons (general styles, specific overrides handled in the loop)
.location-filters {
  display: flex;
  gap: 0.5rem;
  flex-wrap: wrap;
  align-items: center;
}

.location-filter-btn {
  padding: 0.4rem 0.8rem;
  border-radius: 6px;
  font-size: 0.8rem;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s ease;
  position: relative;

  &.active {
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);

    &::after {
      content: '✓';
      position: absolute;
      top: -0.3rem;
      right: -0.3rem;
      border-radius: 50%;
      width: 1.2rem;
      height: 1.2rem;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 0.7rem;
      font-weight: bold;
    }
  }
}

// Modal styling - simplified
.session-modal .modal-content {
  border: none;
  border-radius: 12px;
  overflow: hidden;
}

.modal-title-container {
  flex-grow: 1;
}

.session-meta {
  display: flex;
  gap: 1rem;
  flex-wrap: wrap;
}

.time-badge-modal,
.location-badge-modal {
  background: rgba(255, 255, 255, 0.2);
  padding: 0.25rem 0.5rem;
  border-radius: 4px;
  font-size: 0.85rem;
  font-weight: 500;
}

.section-title {
  color: var(--location-color, #{$primary});
  font-weight: 600;
  font-size: 1.1rem;
  margin-bottom: 1rem;
  border-bottom: 2px solid var(--location-border, #{rgba($primary, 0.1)});
  padding-bottom: 0.5rem;
}

.session-description {
  line-height: 1.6;
}

.speaker-card {
  display: flex;
  gap: 1rem;
  padding: 1.5rem;
  border: 2px solid var(--location-border, #f8f9fa);
  border-radius: 8px;
  background: var(--location-bg-subtle, #f8f9fa);

  &:hover {
    border-color: var(--location-color, #{rgba($primary, 0.3)});
    background: var(--location-bg-hover, #{rgba($primary, 0.02)});
  }
}

.speaker-photo {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  flex-shrink: 0;
}

.speaker-initial-large {
  background: var(--location-color, #{$primary});
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 1.8rem;
  font-weight: 600;
}

.speaker-info-card {
  flex-grow: 1;
}

.speaker-name-card {
  color: var(--location-color, #{$primary});
  font-weight: 700;
}

.speaker-title-card {
  color: var(--location-text-color-secondary, #6c757d);
  font-weight: 500;
  margin-bottom: 0.75rem;
}

.speaker-bio {
  margin-bottom: 1rem;
  line-height: 1.5;
}

// Responsive design - consolidated
@include media-breakpoint-down(lg) {
  .agenda-grid {
    @for $i from 1 through 10 {
      &[data-locations="#{$i}"] {
          grid-template-columns: 100px repeat($i, minmax(280px, 1fr));
          min-width: calc(100px + #{$i} * 280px + 2rem);
          max-width: none;
      }
    }
  }

  .time-main {
    font-size: 1rem;
  }

  .session-title {
    font-size: 0.9rem;
  }

  .speaker-avatar {
    width: 28px;
    height: 28px;
  }

  .speaker-name {
    font-size: 0.8rem;
  }

  .speaker-role {
    font-size: 0.7rem;
  }
}

@include media-breakpoint-down(md) {
  .agenda-grid {
    grid-template-columns: 80px 1fr;
    gap: 0.25rem;
  }

  .agenda-session {
    margin-bottom: 0.5rem;

    &:empty {
      display: none;
    }
  }

  .session-content {
    padding: 0.75rem;
  }

  .time-main {
    font-size: 0.9rem;
  }

  .time-local {
    font-size: 0.7rem;
  }

  // Hide scroll arrows on mobile since we have touch navigation
  .scroll-arrow {
    display: none;
  }

  // Reduce fade indicators
  .agenda-grid-container::before,
  .agenda-grid-container::after {
    width: 20px;
  }

  .agenda-grid-container::before {
    left: 80px; // After smaller time column
  }
}
